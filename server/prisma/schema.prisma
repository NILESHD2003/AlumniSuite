generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Host {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name        String
  address     String?
  email       String   @unique()
  phone       String
  password    String
  logo        String?
  description String?
  status      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  posts       Post[]   @relation("HostPosts")
  invitations Invite[] @relation("HostInvitations")

  contactInfo ContactInfo? @map("contactInfo") // Embedded field
  socials     Socials?     @map("socials") // Embedded field
}

/// Embedded object for contact information
type ContactInfo {
  email   String?
  phNo    String?
  website String?
}

/// Embedded object for social media links
type Socials {
  facebook  String?
  twitter   String?
  linkedIn  String?
  instagram String?
}

enum Role {
  Student
  Alumni
}

model Member {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  role         Role
  name         String
  gender       String
  email        String    @unique()
  dob          DateTime?
  location     String?
  bio          String?
  profileImage String?
  phone        String?
  password     String

  posts Post[] @relation("MemberPosts")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  userId String? @db.ObjectId
  user   Member? @relation("MemberPosts", fields: [userId], references: [id])

  hostId String? @db.ObjectId
  host   Host?   @relation("HostPosts", fields: [hostId], references: [id])

  content       String
  attachments   String[] @default([])
  likesCount    String   @default("0")
  commentsCount String   @default("0")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Invite {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  email  String @unique
  role   Role
  token  String
  hostId String @db.ObjectId
  host   Host   @relation("HostInvitations", fields: [hostId], references: [id])

  createdAt DateTime @default(now())
}
